점수:100점
1번:20점,2번:20점,3번:20점,4번:20점,5번:20점
사진
4번 앱 인벤터사진: https://github.com/skech112/creative-engineering/blob/main/4_0or1_redOrBlue2.png
5번 인벤터 사진: https://github.com/skech112/creative-engineering/blob/main/5.lightAndSpeaker1.png
5번 인벤터 사진: https://github.com/skech112/creative-engineering/blob/main/5.lightAndSpeaker2.png

1.창의 공학을 통해서 학생들이 학습 해야할 내용에 대하 5가지를 적으시오(창의성 함양,협업,소통기술 포함)
창의성과 문제 해결 능력,협업과 팀워크,소통 기술,정보 및 기술 리터러시,윤리적 판단과 사회적 책임 이러한 다섯 가지 학습 내용을 통해 학생들은 창의성을 향상시키고, 협업과 소통 능력을 강화하며, 차세대 문제 해결자로서의 역량을 개발할 수 있을 것입니다.
===============================================================
2.스마트폰으로 집의 전등을 켜고 끄는 시스템을 설계하고 제작하는 과정을 유무선 통신을 포함한 과정을 자세히 설명하시오

2-1. 스마트폰과 무선 통신 모듈을 연결하고, 마이크로컨트롤러와 릴레이 모듈을 연결하는 회로를 설계합니다.
   이 회로는 전원 및 제어 신호를 릴레이에 전달하도록 해야합니다.

2-2. 스마트폰에서 전등을 제어할 수 있도록 하고, 스마트 폰을 앱 또는 웹 앱을 개발하여 무선 통신 모듈을
   통해 제어 명령을 전송할 수 있어야 합니다.

2-3. 무선 통신 모듈을 스마트폰과 페어링하고 네트워크에 연결합니다. Wi-Fi를 사용한다면 무선 라우터에
   연결하고 Bluetooth를 사용한다면 스마트폰과 무선 통신 모듈을 페어링합니다.

2-4. 전원과 소켓을 릴레이 모듈에 연결하고, 릴레이를 통해 전원을 전달합니다. 전기 연결은 안전을 위해
   주의 깊게 처리해야 됩니다.

2-5. 시스템을 테스트하여 원격으로 전등을 켜고 끌 수 있는지 확인하고, 안정성을 점검한 뒤에 시스템을
   정상적으로 사용할 수 있게 됩니다.
===========================================================
3.아두이노의 스위치를 읽고 서버로 1토에 1회씩 전송하는 코드와 서버에서 수신하여 1이면 초록색 2면 검은색으로 바꾸는 코드
아두이노 코드
void setup() {
  pinMode(11, INPUT_PULLUP);
  Serial.begin(9600);
}
void loop() {
  int sw=digitalRead(11);
  Serial.println(sw+1);
  delay(1000);
}
프로세싱 코드
import processing.serial.*;
Serial p;
void setup(){
  p = new Serial(this, "COM4", 9600);
}
String m="";
void draw(){
  if(p.available()>0){
    m = p.readStringUntil('\n');
    if(m!=null){
      print(m);
      if(m.indexOf('1')==0) background(0,255,0);
      if(m.indexOf('2')==0) background(0,0,0);
    }
  }
}
===============================================
4.서버에서 스마트폰으로 1을 보내면 스마트폰의 화면이 푸른색으로,0을 보내면 붉은색으로 보내는 코드를 적으시오
아두이노 코드
void setup() {
  pinMode(11, INPUT_PULLUP);
  Serial.begin(9600);
}
void loop() {
  int sw=digitalRead(11);
  Serial.println(sw);
  delay(1000);
}
프로세싱 코드
import processing.serial.*;
import processing.net.*;
Serial p;
Server s;
Client c;
void setup(){
  p = new Serial(this, "COM11", 9600);
  s = new Server(this, 123);
}
String m="";
void draw(){
  if(p.available()>0){
    m = p.readStringUntil('\n');
    if(m!=null){
      print(m);
    }
  }
  c = s.available();
  if(c!=null){
    String w = c.readString();
    println(w);
    if (w.indexOf("GET")==0) {
      c.write("HTTP/1.1 200 OK\r\n\r\n\r\n");
      c.write(m);
    }
    c.stop();
  }
}
===========================================================
5.
아두이노 코드
void setup() {
  Serial.begin(9600);
  pinMode(7, OUTPUT);
}
void loop() {
  
  String values[] = {"1", "2", "3", "4", "5", "6", "7", "8"};

  if (Serial.available() > 0) {
    
    String m = Serial.readStringUntil('\n');
        if (m == "on") {
      digitalWrite(7, HIGH);
    } else if (m == "off") {
      digitalWrite(7, LOW);
    } else {
      int frequency = 0;
      // 문자열을 정수로 변환하여 주파수 설정
      int value = m.toInt();
      switch (value) {
        case 1:
          frequency = 261; // 도
          break;
        case 2:
          frequency = 293; // 레
          break;
        case 3:
          frequency = 329; // 미
          break;
        case 4:
          frequency = 349; // 파
          break;
        case 5:
          frequency = 392; // 솔
          break;
        case 6:
          frequency = 440; // 라
          break;
        case 7:
          frequency = 493; // 시
          break;
        case 8:
          frequency = 523; // 높은 도
          break;
        default:
          // 유효하지 않은 입력 처리
          break;
      }

      if (frequency > 0) {
        tone(4, frequency, 500); // 주파수 설정
      }
    }
  }
}
프로세싱 코드
import processing.net.*;
import processing.serial.*;
Server s;
Client c;
Serial p;
void setup() {
  s = new Server(this, 123);
  p = new Serial(this, "COM11", 9600);
}
String msg="hi";
void draw() {
  c = s.available();
  if (c!=null) {
    
    String m = c.readString();
    if (m.indexOf("GET /")==0) {
      c.write("HTTP/1.1 200 OK\r\n\r\n");
      c.write(msg);
    }
    if (m.indexOf("PUT /")==0) {
      int n = m.indexOf("\r\n\r\n")+4; // on-off 위치
      m = m.substring(n); // on-off 잘라 내는 위치   //
      m += '\n';           // 표시할 문자
      p.write(m); // 시리얼 포트로 on-off 보내기 
      print(m);
    }
  }
  if (p.available()>0) { // 시리얼 데이터 읽기
    String m = p.readStringUntil('\n');
    if (m!=null)  msg = m;
    print(msg);
  }
}
